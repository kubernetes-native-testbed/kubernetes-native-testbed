---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: point
  namespace: point
  labels:
    service: point
    role: app
spec:
  replicas: 2
  selector:
    matchLabels:
      service: point
      role: app
  template:
    metadata:
      labels:
        service: point
        role: app
    spec:
      containers:
        - name: point-app
          image: registry-harbor-core.infra.svc.cluster.local/library/point:c57ea1d59ad621a4cd3bdae8d334dd83952cfbd5
          env:
            - name: QUEUE_HOST
              value: point-queue-kafka-bootstrap.point.svc.cluster.local
            - name: QUEUE_PORT
              value: "9092"
            - name: QUEUE_TOPIC
              value: point-topic
            - name: QUEUE_USER
              value: point-user
            - name: QUEUE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: point-user
                  key: user.password

            - name: KVS_HOST
              value: point-kvs-memcached.point.svc.cluster.local
            - name: KVS_PORT
              value: "11211"

            - name: DB_HOST
              value: yb-tserver-point-db-0.yb-tservers-point-db.point.svc.cluster.local
            - name: DB_PORT
              value: "5433"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: point-db-credentials
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: point-db-credentials
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: point-db-credentials
                  key: DB_PASSWORD

            - name: DB_PORT_YPOSTGRES
              value: "5433"
            - name: DB_PORT_YCASSANDRA
              value: "9042"
            - name: DB_PORT_YREDIS
              value: "6379"

            - name: DB_SSL
              value: disable
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
            initialDelaySeconds: 30
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: point
  namespace: point
  labels:
    service: point
    role: app
  annotations:
    contour.heptio.com/upstream-protocol.h2c: "8080"
spec:
  type: ClusterIP
  ports:
    - name: "http-port"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
  selector:
    service: point
    role: app
